import Vue from 'vue'
import App from './App.vue'

Vue.config.productionTip = false

/**
 *   混入 (mixin) 提供了一种非常灵活的方式，来分发 Vue 组件中的可复用功能。一个混入对象可以包含任意组件选项
 *   当组件使用混入对象时，所有混入对象的选项将被“混合”进入该组件本身的选项。
 *   1. 全局混入: 在 main.js 中执行全局混入的方式, 这样所有子组件都会混入相关 选项. => 子组件便可以直接使用
 *   2. 局部混入: 在 mixin是 文件夹下创建混入对象, 在需要混入的组件中添加混入
 */

/**
 *  --------- 混入 ---------
 *  1. 选项合并:
 *      大概组件和混入对象含同名选项时, 这些选项以恰当的方式进行 "合并"
 *      比如, 数据对象在内部会进行 递归合并, 并在发生冲突时 以 当前组件数据优先
 *      同名的 钩子函数, 将合并为一个数组, 因此都会被调用. 混入对象的钩子在组件自身钩子 之前 调用
 *  2. 全局混入:
 *      混入也可以进行全局注册, 但是使用时要格外小心.一旦使用全局混入,
 *      它将影响 每一个 之后创建的 Vue 实例.
 */


// ====> 全局混入
Vue.mixin({
    data() {
        return {
            mixInMsg: 'hello, 我是全局混入对象中的 data数据哦!'
        }
    },
    mounted() {
        console.log('%c 全局混入对象执行 mounted 方法', 'color:red');
    }
})
new Vue({
    render: h => h(App),
}).$mount('#app')
